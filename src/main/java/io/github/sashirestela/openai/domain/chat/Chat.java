package io.github.sashirestela.openai.domain.chat;

import com.fasterxml.jackson.annotation.JsonAlias;
import com.fasterxml.jackson.databind.PropertyNamingStrategies;
import com.fasterxml.jackson.databind.annotation.JsonNaming;
import io.github.sashirestela.openai.common.Usage;
import io.github.sashirestela.openai.domain.chat.ChatMessage.ResponseMessage;
import io.github.sashirestela.openai.domain.chat.ChatRequest.ServiceTier;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

import java.util.List;

/**
 * Represents a chat response from the OpenAI API.
 * <p>
 * This class encapsulates the details of a chat interaction, including metadata, the model used,
 * service tier information, system fingerprint, response choices, and usage statistics.
 * </p>
 */
@NoArgsConstructor
@Getter
@ToString
@JsonNaming(PropertyNamingStrategies.SnakeCaseStrategy.class)
public class Chat {

    /**
     * The unique identifier for the chat.
     */
    private String id;

    /**
     * The type of the object returned, typically "chat".
     */
    private String object;

    /**
     * The timestamp when the chat was created, in Unix epoch time.
     */
    private Long created;

    /**
     * The name of the model used to generate the chat response.
     */
    private String model;

    /**
     * The service tier associated with the chat request.
     */
    private ServiceTier serviceTier;

    /**
     * A fingerprint identifying the system that generated the chat.
     */
    private String systemFingerprint;

    /**
     * A list of response choices generated by the model.
     */
    private List<Choice> choices;

    /**
     * Usage statistics for the chat request, including token counts.
     */
    private Usage usage;

    /**
     * Retrieves the first response message from the list of choices.
     *
     * @return the first {@link ResponseMessage} in the choices list
     * @throws IndexOutOfBoundsException if the choices list is empty
     */
    public ResponseMessage firstMessage() {
        return getChoices().get(0).getMessage();
    }

    /**
     * Retrieves the content of the first response message.
     *
     * @return the content of the first {@link ResponseMessage}
     * @throws IndexOutOfBoundsException if the choices list is empty
     */
    public String firstContent() {
        return firstMessage().getContent();
    }

    /**
     * Represents an individual choice in the chat response.
     */
    @NoArgsConstructor
    @Getter
    @Setter
    @ToString
    @JsonNaming(PropertyNamingStrategies.SnakeCaseStrategy.class)
    public static class Choice {

        /**
         * The index of this choice in the list of choices.
         */
        private Integer index;

        /**
         * The response message associated with this choice.
         * <p>
         * This field is aliased as "delta" in JSON representations.
         * </p>
         */
        @JsonAlias({ "delta" })
        private ResponseMessage message;

        /**
         * The reason why the generation finished, e.g., "stop" or "length".
         */
        private String finishReason;

        /**
         * Log probability information for the tokens generated in the response.
         */
        private LogprobInfo logprobs;

        /**
         * Contains log probability details for tokens in the generated content and any refusals.
         */
        @NoArgsConstructor
        @Getter
        @ToString
        @JsonNaming(PropertyNamingStrategies.SnakeCaseStrategy.class)
        public static class LogprobInfo {

            /**
             * A list of token log probabilities for the generated content.
             */
            private List<TokenLogprob> content;

            /**
             * A list of token log probabilities for any refusals in the response.
             */
            private List<TokenLogprob> refusal;

            /**
             * Represents the log probability details for an individual token.
             */
            @NoArgsConstructor
            @Getter
            @ToString
            @JsonNaming(PropertyNamingStrategies.SnakeCaseStrategy.class)
            public static class TokenLogprob {

                /**
                 * The token text.
                 */
                private String token;

                /**
                 * The log probability of the token.
                 */
                private Double logprob;

                /**
                 * The byte positions of the token in the original text.
                 */
                private List<Integer> bytes;

                /**
                 * A list of top log probabilities for the token's possible alternatives.
                 */
                private List<TopLogprob> topLogprobs;

            }

            /**
             * Represents the top log probability details for alternative tokens.
             */
            @NoArgsConstructor
            @Getter
            @ToString
            @JsonNaming(PropertyNamingStrategies.SnakeCaseStrategy.class)
            public static class TopLogprob {

                /**
                 * The alternative token text.
                 */
                private String token;

                /**
                 * The log probability of the alternative token.
                 */
                private Double logprob;

                /**
                 * The byte positions of the alternative token in the original text.
                 */
                private List<Integer> bytes;

            }

        }

    }

}